import psutil
import os

KEYWORDS_FILE = "keywords.txt"
DEFAULT = [
    "keylogger.exe",
    "spy.exe",
    "stealer.exe",
    "logger.exe",
    "klog.exe",
    "winlogon.exe",
    "sniffer.exe",
    "monitor.exe",
    "screenlogger.exe",
    "passwordstealer.exe",
    "cliplogger.exe",
    "remotetool.exe",
    "rat.exe",
    "trojan.exe",
    "injector.exe",
    "bankingmalware.exe",
    "dataharvester.exe",
    "systemlogger.exe",
    "processspy.exe",
    "hiddenlogger.exe",
    "malware.exe",
    "spyagent.exe"

]

# if there is a keyword file exists it reads the file and then compares it with the default keywords if they dont exist in keywordas file they are added to it 
def check_keywords_file():               
    existing = set()
    if os.path.exists(KEYWORDS_FILE):
        with open(KEYWORDS_FILE, "r") as f:
            existing = {line.strip().lower() for line in f if line.strip()}

    missing = [key_word for key_word in DEFAULT if key_word.lower() not in existing]  # in this point the key_word is assingend 
    # if the default list of keywords is not present in the keywords file, it adds them
    if missing:
        with open(KEYWORDS_FILE, "a") as f:
            for key_word in missing:
                f.write(key_word + "\n")
        print(f"Added missing keywords: {missing}")
    else:
        print(f"All default keywords are already in {KEYWORDS_FILE}.")

# read keywords from file
def load_keywords():
    with open(KEYWORDS_FILE, "r") as f:
        return [line.strip().lower() for line in f if line.strip()]

def check_processes(key_words):
    found = []
    for proc in psutil.process_iter(['pid', 'name', 'exe']):
        try:
            pname = proc.info['name'].lower() if proc.info['name'] else ""
            pexe = proc.info['exe'].lower() if proc.info['exe'] else ""

            for kw in key_words:
                if kw in pname or kw in pexe:
                    if kw == "winlogon.exe" and "c:\\windows\\system32\\winlogon.exe" in pexe:
                        continue
                    found.append((proc.info['pid'], pname, pexe))

        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    return found

def main():
    print(" Keylogger Detector started.")
    check_keywords_file()
    keywords = load_keywords()

    while True:
        found = check_processes(keywords)
        if found:
            print("\n Suspicious processes detected!")
            for pid, name, exe in found:
                print(f"   PID: {pid}, Name: {name}, Path: {exe}")
        else:
            print("No suspicious keylogger activity found.")

        user_input = input("\nPress Enter to scan again or type 'q' to quit: ").lower()
        if user_input == 'q':
            print(" Detector stopped by user.")
            break

if __name__ == "__main__":
    main()
